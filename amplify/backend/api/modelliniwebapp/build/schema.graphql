enum Premispeciali {
  TROFEO_NAPOLEONE
  TROFEO_GARIBALDI
  TROFEO_JANUSCERIFFU
}

enum Partecipazione {
  COMPETITIVO
  ESPOSITIVO
}

enum Categorie {
  A1
  A2
  B1
  B2
  C1
  C2
}

enum Classi {
  JUNIOR
  BEGINNER
  STANDARD
  MASTER
}

type Modellino @aws_iam @aws_cognito_user_pools {
  id: ID!
  Descrizione: String!
  ClasseAppartenenza: Classi!
  Categoria: Categorie!
  TipodiPartecipazione: Partecipazione!
  PremioSpeciale: Premispeciali
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  owner: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelModellinoConnection @aws_iam @aws_cognito_user_pools {
  items: [Modellino]!
  nextToken: String
}

input ModelClassiInput {
  eq: Classi
  ne: Classi
}

input ModelCategorieInput {
  eq: Categorie
  ne: Categorie
}

input ModelPartecipazioneInput {
  eq: Partecipazione
  ne: Partecipazione
}

input ModelPremispecialiInput {
  eq: Premispeciali
  ne: Premispeciali
}

input ModelModellinoFilterInput {
  id: ModelIDInput
  Descrizione: ModelStringInput
  ClasseAppartenenza: ModelClassiInput
  Categoria: ModelCategorieInput
  TipodiPartecipazione: ModelPartecipazioneInput
  PremioSpeciale: ModelPremispecialiInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelModellinoFilterInput]
  or: [ModelModellinoFilterInput]
  not: ModelModellinoFilterInput
  owner: ModelStringInput
}

type Query {
  getModellino(id: ID!): Modellino @aws_iam @aws_cognito_user_pools
  listModellinos(filter: ModelModellinoFilterInput, limit: Int, nextToken: String): ModelModellinoConnection @aws_iam @aws_cognito_user_pools
}

input ModelModellinoConditionInput {
  Descrizione: ModelStringInput
  ClasseAppartenenza: ModelClassiInput
  Categoria: ModelCategorieInput
  TipodiPartecipazione: ModelPartecipazioneInput
  PremioSpeciale: ModelPremispecialiInput
  and: [ModelModellinoConditionInput]
  or: [ModelModellinoConditionInput]
  not: ModelModellinoConditionInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  owner: ModelStringInput
}

input CreateModellinoInput {
  id: ID
  Descrizione: String!
  ClasseAppartenenza: Classi!
  Categoria: Categorie!
  TipodiPartecipazione: Partecipazione!
  PremioSpeciale: Premispeciali
}

input UpdateModellinoInput {
  id: ID!
  Descrizione: String
  ClasseAppartenenza: Classi
  Categoria: Categorie
  TipodiPartecipazione: Partecipazione
  PremioSpeciale: Premispeciali
}

input DeleteModellinoInput {
  id: ID!
}

type Mutation {
  createModellino(input: CreateModellinoInput!, condition: ModelModellinoConditionInput): Modellino @aws_iam @aws_cognito_user_pools
  updateModellino(input: UpdateModellinoInput!, condition: ModelModellinoConditionInput): Modellino @aws_iam @aws_cognito_user_pools
  deleteModellino(input: DeleteModellinoInput!, condition: ModelModellinoConditionInput): Modellino @aws_iam @aws_cognito_user_pools
}

input ModelSubscriptionModellinoFilterInput {
  id: ModelSubscriptionIDInput
  Descrizione: ModelSubscriptionStringInput
  ClasseAppartenenza: ModelSubscriptionStringInput
  Categoria: ModelSubscriptionStringInput
  TipodiPartecipazione: ModelSubscriptionStringInput
  PremioSpeciale: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionModellinoFilterInput]
  or: [ModelSubscriptionModellinoFilterInput]
  owner: ModelStringInput
}

type Subscription {
  onCreateModellino(filter: ModelSubscriptionModellinoFilterInput, owner: String): Modellino @aws_subscribe(mutations: ["createModellino"]) @aws_iam @aws_cognito_user_pools
  onUpdateModellino(filter: ModelSubscriptionModellinoFilterInput, owner: String): Modellino @aws_subscribe(mutations: ["updateModellino"]) @aws_iam @aws_cognito_user_pools
  onDeleteModellino(filter: ModelSubscriptionModellinoFilterInput, owner: String): Modellino @aws_subscribe(mutations: ["deleteModellino"]) @aws_iam @aws_cognito_user_pools
}
